#!/bin/sh
set -euo pipefail

# Description: detects novaseq
# Author: Christopher Medway
# Date: 15/10/2019
version="1.0.0"
dragenqc_version="2.0.0"

function processJobs {
    echo "checking for jobs in $1 ..."

    for path in $(find "$1" -maxdepth 2 -mindepth 2 -type f -name "RTAComplete.txt" -exec dirname '{}' \;); do
         
        if [ ! -f $path/dragen-detected ]; then

            echo "new run to process $path"
             
            # confirm that run has been detected
            touch "$path"/dragen-detected

            #remove spaces from sample sheet
            sed -i 's/ //g' "$path"/SampleSheet.csv

            # extract run info from path
            instrumentType=$(basename $(dirname "$path"))
            run=$(basename "$path")

            # log
	    echo "path: $path" >> "$path"/dragen-detected
            echo "run: $run" >> "$path"/dragen-detected
            echo "instrumentType: $instrumentType" >> "$path"/dragen-detected
            echo "running DragenQC.sh" >> "$path"/dragen-detected
            
            echo "launching pipeline"
            # launch IlluminaQC for demultiplexing and QC
            bash /data/pipelines/DragenQC/DragenQC-2.0.0/DragenQC.sh $path > /staging/data/tmp/"$run"-DragenQC.log  2>&1
            mv /staging/data/tmp/"$run"-DragenQC.log /mnt/novaseq-archive-fastq/"$run"

        fi
    done
}

dragen_count=$(ps -aux | grep "\/opt/edico/bin/dragen\b" | wc -l)

echo $dragen_count

if [ $dragen_count -gt 1 ]; then

  echo "cant do the dragen yet another process running."

else

processJobs "/mnt/novaseq"

fi

